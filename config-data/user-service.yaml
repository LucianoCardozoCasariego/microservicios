server:
  port: ${PORT:${SERVER_PORT:0}}
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

resilience4j.circuitbreaker:
    instances:
        carsCB:
            registerHealthIndicator: true
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: TIME_BASED
            minimumNumberOfCalls: 4
            waitDurationInOpenState: 5s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
        bikesCB:
            registerHealthIndicator: true
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: TIME_BASED
            minimumNumberOfCalls: 4
            waitDurationInOpenState: 5s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
        allCB:
            registerHealthIndicator: true
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            slidingWindowType: TIME_BASED
            minimumNumberOfCalls: 4
            waitDurationInOpenState: 5s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0 # Esto asegura que todas las solicitudes se tracen, ajusta según lo necesario
  metrics:
    export:
      prometheus:
        enabled: true # Si utilizas Prometheus para métricas

# Si quieres exportar trazas a Zipkin
tracing:
  zipkin:
    enabled: true
    endpoint: http://localhost:9411/api/v2/spans
